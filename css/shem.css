/*
CSS:
	1. Aesthetics (pretty look, how accurate)
	** 2. Arcitechture (web designer miss this ....) **
			- css architecture ...
				- shadow dom, web component
				- scope:
					- global in css, and web components try to create scope.
		Andy hume css for grown ups
		https://www.youtube.com/watch?v=ZpFdyfs03Ug
*/

@font-face {
	font-family: myFirstFont;
	src: url(fonts/Brandon_thin_it.otf);
	src: url(fonts/Brandon_reg_it.otf);
	src: url(fonts/Brandon_med.otf);
}

/*

	- When to use descendent selector (combinator) ?
	- Is it a great idea to use IDs to target elements even if you know that element is going to be unique ?
	- Why should we care about css specificity ?
	- How can we harness inheritance in CSS ?
	- Is Classitis real ?;
	 

	 -(tuesday 04, 2015)shemmarrah john - li selector has been update - id = clients_image has been modified and a div called 
	 info_text has been attached including the a div#menuebar  with ul.

*/


/*
	it's okay if you have to use it. But, it should be used sparsely.
*/


* {margin: 0; padding: 0;}

body{
	background-color: #999;
}

/* 
	it is counter productive to repeat the same thing
	instead you can put that in one class and assing the same
	class to multiple element.
	// TODO: refactor the card ... instead of repeating ids, use class.
	// TODO: add the class .my-card and make other adjustments ...
*/
.my-card {
	position: relative;
}


.card{
	height: 100px;
	width: 25%;
	background-color: #666;
	margin-top:50px;
	float:left;
	position: relative;
	min-width: 490px;
	margin-left: 5%;
}




/*
	Bad because:
		- not reusable
		- hard to override -- specificity issue.
		- hard to maintain
*/
.names {

}

/*
css side effects article and BEM naming convention
problems in css

	 - avoiding unexpected behavior and selector matching
	 - minimizing specificity

	http://philipwalton.com/articles/side-effects-in-css/
*/
/*descendant, selector/combinator*/
/* BAD BAD BAD */
.page-about .header .names {
	/* use modifier instead ...*/
	/*.names.names-cap {
	}*/
}


/*
	What is the problem with setting global styles that are specific to a global base element ?

		- only set base and minimal styles for html elements.

*/

/*
	HTML element selector ??????
	BE CAREFUL
*/
p {
	font-family: myFirstFont;
	text-align: left;
}

/*
	title and title 2 have the same styles
	except, title2 has margin bottom.
*/

/* GROUPING IS ALWAYS GOOD
	good talk on youtube about css grouping and wordpress conf
	css structure

*/
.title, .title2 {
	color: red;
	font-size: 20px;
}

.title2 {
	margin-bottom: 30px;
}


.btn-lg, .btn-small {
	color: black;
}

.btn-lg {
	line-height: 16px;
}

.btn-small {
	line-height: 10px;
}


/* content and modifier classes */

/*
	dont use elements because they will change
	- CHANGE CHANGE CHANGE CHANGE â‰  reliability
	-- CHANGE CHANGE is EVIL -- 
	- Weapon to fight change:
		- good structure
		- 
		- not qualifying selectors: NO NONNONONONOOONONONONONONON
		 .main.hello.somthinelse ul li:first- child + li {}
		- and other things on the top of the source file.
*/

.title {

}

.title.title-imp {

}



.name {
	left: 100px;
}


/*
	BEM for naming convention
*/
.clients_image{
	height: 100px;
	width: 100px;
	float: left;
}


.clients_image_female{

	height: 100px;
	width: 100px;
	float: left;
	background-image: url(images/female2.jpg);
	background-size: 190px;
	background-repeat: no-repeat;
	background-position: top center;

	

}

img{

	max-width: 100%;
	height: 100px;
	float: left;
	border: none;
	
}

/*
	When do you think it is ok to use IDs ? and when is it not ?
		IDS:
			- target things
			- An id can appear only once throughout. ONLY ONCE.
		classes:
			- target things
			- you can have multipe classes obviously. ...

		What's the problem with using ids ? What problems you might you run into ?
			- not re-useable ... you can't create moduels with ids. Things are ever changing ... GOLDEN RULE #1
			- ERROR
			- It increases the rank in the selector, and you always want to minize the rank (speceficity) Don't use IDS for ccs selectors.

*/

.myinfo { color: blue; }

#info_text {
	height: 60px;	
	width: 100%;
	background-color:#fff;
	padding-top: 40px;
}


.ranking{
	height: 50px;
	background-color: green;
	width: 50px;
	position: absolute;
	right:20px;
	top: 15px;
	position: absolute;
	border-radius: 50px;

}

.ranking p{

	text-align: center;
	padding-top: 15px;
	color: #fff;
}
.money_raised{
	height: 20px;
	width: 100px;
	position: absolute;
	right:0;
	bottom: 0;
	position: absolute;
}

/* desc is ok as long as the 
	depth is not deep.

	deep:
		about page and you set everything in there in relation to that.

	shallow:
		card, and you just wanna set the title of that card.

	child vs descendent selector:
	.money_raised > p {}
	.money_raised p { }

*/
.money_raised p {
	text-align: center;
}

/*
https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Writing_efficient_CSS
*/

/* descendent */
.shem p {
	color: red;
}
/* >: child */
.shem > p { 
	color: blue;
}

/*global style*/
h2 {
	color: black;
	font-size: 20px;
}

.card > h2 {
	font-size: 30px;
}


/* shadow dom: SCOPE is possible in shadow dom and web components !!!!! */
/* CSS has global scope and that is the main problem of css. systemic. */
/* BEM name convention tries to mitigate the problem */

/*follow the convenstions and the things that we talked about*/
/*try to make your comopoent, card as self contained as possible so other styles wouldnt be able to affect how it lookss
so that later we can wrap it into an angular directive once we get into angular.
*/
